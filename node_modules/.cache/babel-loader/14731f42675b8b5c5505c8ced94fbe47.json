{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abi Lopez\\\\Desktop\\\\CS194W\\\\my-app\\\\src\\\\components\\\\eventhome.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { NotFound } from \".\";\nimport util from \"../util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventHome() {\n  _s();\n\n  const [eventData, setEventData] = useState(null);\n  const [taskData, setTaskData] = useState(null);\n  const [createTask, setCreateTask] = useState(false);\n  const [error, setError] = useState(null);\n  const [signUpEvent, setSignUpEvent] = useState(null);\n  const [signUpTask, setSignUpTask] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    renderEvent();\n  });\n  /* function getQueryParams\r\n   *\r\n   * Returns a JavaScript object containing\r\n   *   'org', the name of the organization that organizes this event\r\n   *   'event', the name of the event\r\n   */\n\n  function getQueryParams() {\n    const params = new Proxy(new URLSearchParams(window.location.search), {\n      get: (searchParams, prop) => searchParams.get(prop)\n    });\n    const orgParam = params.org;\n    const eventParam = params.event;\n    const queryParams = {\n      'org': orgParam,\n      'event': eventParam\n    };\n    return queryParams;\n  }\n  /* function handleError\r\n   *\r\n   * Takes action based on a request to the server returning an error.\r\n   * If the user is unauthorized, redirects to '/'. Otherwise, displays\r\n   * the 404 error page.\r\n   * Argument \"response\" should be a received HTTP response.\r\n   */\n  // function handleError(response) {\n  //   if (response.status === 401) {\n  //     navigate('/');\n  //   } else {\n  //     setError(<NotFound />);\n  //   }\n  // }\n\n  /* function fetchEventData\r\n   *\r\n   * Makes an HTTP request to fetch event data from the backend.\r\n   *\r\n   * Argument \"queryParams\" should be a JavaScript object containing\r\n   * 'org', the name of the organization that organizes this event\r\n   * 'event', the name of the event.\r\n   *\r\n   * On success, returns a Promise that is a JavaScript object containing\r\n   * 'eventName', the name of the event\r\n   * 'orgName', the name of the organization that organizes the event\r\n   * 'category', the category of the event\r\n   * 'date', the date of the event\r\n   * 'bio', the description of the event\r\n   *\r\n   * On error, returns a Promise that contains null. In the event of an error,\r\n   * fetchEventData takes appropriate action to handle the error.\r\n   */\n  // async function fetchEventData(queryParams) {\n  //   const response = await util.requestGET(\n  //     '/causes_api/get_event', queryParams, 'application/json'\n  //   );\n  //   if (response.status === 200) {\n  //     const body = await response.json();\n  //     return body;\n  //   } else {\n  //     handleError(response);\n  //     return null;\n  //   }\n  // }\n\n  /* function renderEvent\r\n   *\r\n   * Fetches and displays the correct event. Parses the organization name\r\n   * and event name from the query parameters, fetches the event data,\r\n   * and constructs the JSX for the event. Finally, calls setData() to\r\n   * display the event.\r\n   *\r\n   * Both organization and event must be specified in the query parameters\r\n   * for this page.\r\n   */\n\n\n  function renderEvent() {\n    // do not re-render if data already rendered\n    if (eventData != null || error != null) return;\n    setEventData(false);\n    setTaskData(false);\n    setLoaded(true); // need to add function that checks \n    // if the org page is it's own home page\n    // or another org\n\n    setCreateTask(true);\n    const queryParams = getQueryParams();\n\n    if (queryParams['org'] == null || queryParams['event'] == null) {\n      // Both org and event needed to find resource\n      // setLoaded(true);\n      setError( /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this));\n      return;\n    } //   fetchEventData(queryParams).then(eventData => {\n    //     setLoaded(true);\n    //     if (eventData == null) {\n    //       // Something went wrong.\n    //       return;\n\n\n    util.requestGET('/causes_api/get_event', queryParams, 'application/json').then(res => {\n      if (res.status === 200) {\n        res.json().then(body => {\n          // const orgData = body['org'];\n          const orgEvent = body['event_info'];\n          const user = body['user'];\n          setEventData(orgEvent);\n          setTaskData(orgEvent);\n\n          if (queryParams['org'] == null) {// We are displaying logged-in organization\n            // setCreateTask(true);\n          } else if ('volunteer' in user) {\n            setSignUpTask(!user.volunteer.orgs.includes(queryParams['org']));\n            setSignUpEvent(!user.volunteer.orgs.includes(queryParams['org']));\n          }\n        });\n      } else if (res.status === 401) {\n        navigate('/');\n      } else {\n        setError(404);\n      } //     setEventData(eventData);\n\n    });\n  }\n  /* function goingEvent\r\n  *\r\n  * Makes request to backend to sign logged-in volunteer user up\r\n  * for this event.\r\n  */\n\n\n  function goingEvent() {\n    const queryParams = getQueryParams();\n    const body = JSON.stringify({\n      'event': queryParams['event']\n    });\n    util.requestPOST('/causes_api/vol_event_link', body).then(res => {\n      if (res.status === 200) {\n        setSignUpEvent(false);\n      } else {\n        // TODO: change this\n        alert(\"Something went wrong.\");\n      }\n    });\n  }\n\n  function notGoingEvent() {\n    const queryParams = getQueryParams();\n    const body = JSON.stringify({\n      'event': queryParams['event']\n    });\n    util.requestPOST('/causes_api/vol_event_unlink', body).then(res => {\n      if (res.status === 200) {\n        setSignUpEvent(true);\n      } else {\n        // TODO: change this\n        alert(\"Something went wrong.\");\n      }\n    });\n  }\n  /* function doTask\r\n  *\r\n  * Makes request to backend to sign logged-in volunteer user up\r\n  * for this event.\r\n  */\n\n\n  function doingTask() {\n    const queryParams = getQueryParams();\n    const body = JSON.stringify({\n      'event': queryParams['event']\n    });\n    util.requestPOST('/causes_api/vol_task_link', body).then(res => {\n      if (res.status === 200) {\n        setSignUpTask(false);\n      } else {\n        // TODO: change this\n        alert(\"Something went wrong.\");\n      }\n    });\n  }\n\n  function notDoingTask() {\n    const queryParams = getQueryParams();\n    const body = JSON.stringify({\n      'event': queryParams['event']\n    });\n    util.requestPOST('/causes_api/vol_task_unlink', body).then(res => {\n      if (res.status === 200) {\n        setSignUpTask(true);\n      } else {\n        // TODO: change this\n        alert(\"Something went wrong.\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [eventData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: eventData.eventName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Organized by \", eventData.orgName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: eventData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            textAlign: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: eventData.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            textAlign: 'right'\n          },\n          children: [signUpEvent && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            style: {\n              marginTop: 15\n            },\n            onClick: goingEvent,\n            children: \"Going\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), signUpEvent === false && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            style: {\n              marginTop: 15\n            },\n            onClick: notGoingEvent,\n            children: \"Not Going\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: eventData.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            textAlign: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            textAlign: 'right'\n          },\n          children: createTask && /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/createtask\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              type: \"submit\",\n              style: {\n                marginTop: 15\n              },\n              children: \"+ Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  textAlign: 'left'\n                },\n                children: \"Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"Task Deadline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  textAlign: 'right'\n                },\n                children: [signUpTask && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  style: {\n                    marginTop: 15\n                  },\n                  onClick: doingTask,\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 17\n                }, this), signUpTask === false && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  style: {\n                    marginTop: 15\n                  },\n                  onClick: notDoingTask,\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Task Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), !loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this), error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventHome, \"9YPszmpqVbDrNhRphv0Oed2I45Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EventHome;\nexport default EventHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventHome\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","Row","Col","Card","Button","Spinner","NotFound","util","EventHome","eventData","setEventData","taskData","setTaskData","createTask","setCreateTask","error","setError","signUpEvent","setSignUpEvent","signUpTask","setSignUpTask","loaded","setLoaded","navigate","renderEvent","getQueryParams","params","Proxy","URLSearchParams","window","location","search","get","searchParams","prop","orgParam","org","eventParam","event","queryParams","requestGET","then","res","status","json","body","orgEvent","user","volunteer","orgs","includes","goingEvent","JSON","stringify","requestPOST","alert","notGoingEvent","doingTask","notDoingTask","eventName","orgName","date","textAlign","category","marginTop","bio"],"sources":["C:/Users/Abi Lopez/Desktop/CS194W/my-app/src/components/eventhome.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { NotFound } from \".\";\r\nimport util from \"../util\";\r\n\r\nfunction EventHome() {\r\n  const [eventData, setEventData] = useState(null);\r\n  const [taskData, setTaskData] = useState(null);\r\n  const [createTask, setCreateTask] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [signUpEvent, setSignUpEvent] = useState(null);\r\n  const [signUpTask, setSignUpTask] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    renderEvent();\r\n  });\r\n\r\n  /* function getQueryParams\r\n   *\r\n   * Returns a JavaScript object containing\r\n   *   'org', the name of the organization that organizes this event\r\n   *   'event', the name of the event\r\n   */\r\n  function getQueryParams() {\r\n    const params = new Proxy(new URLSearchParams(window.location.search), {\r\n      get: (searchParams, prop) => searchParams.get(prop),\r\n    });\r\n\r\n    const orgParam = params.org;\r\n    const eventParam = params.event;\r\n\r\n    const queryParams = {\r\n      'org' : orgParam,\r\n      'event' : eventParam\r\n    };\r\n\r\n    return queryParams;\r\n  }\r\n\r\n  /* function handleError\r\n   *\r\n   * Takes action based on a request to the server returning an error.\r\n   * If the user is unauthorized, redirects to '/'. Otherwise, displays\r\n   * the 404 error page.\r\n   * Argument \"response\" should be a received HTTP response.\r\n   */\r\n  // function handleError(response) {\r\n  //   if (response.status === 401) {\r\n  //     navigate('/');\r\n  //   } else {\r\n  //     setError(<NotFound />);\r\n  //   }\r\n  // }\r\n\r\n  /* function fetchEventData\r\n   *\r\n   * Makes an HTTP request to fetch event data from the backend.\r\n   *\r\n   * Argument \"queryParams\" should be a JavaScript object containing\r\n   * 'org', the name of the organization that organizes this event\r\n   * 'event', the name of the event.\r\n   *\r\n   * On success, returns a Promise that is a JavaScript object containing\r\n   * 'eventName', the name of the event\r\n   * 'orgName', the name of the organization that organizes the event\r\n   * 'category', the category of the event\r\n   * 'date', the date of the event\r\n   * 'bio', the description of the event\r\n   *\r\n   * On error, returns a Promise that contains null. In the event of an error,\r\n   * fetchEventData takes appropriate action to handle the error.\r\n   */\r\n  // async function fetchEventData(queryParams) {\r\n  //   const response = await util.requestGET(\r\n  //     '/causes_api/get_event', queryParams, 'application/json'\r\n  //   );\r\n\r\n  //   if (response.status === 200) {\r\n  //     const body = await response.json();\r\n  //     return body;\r\n  //   } else {\r\n  //     handleError(response);\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n  /* function renderEvent\r\n   *\r\n   * Fetches and displays the correct event. Parses the organization name\r\n   * and event name from the query parameters, fetches the event data,\r\n   * and constructs the JSX for the event. Finally, calls setData() to\r\n   * display the event.\r\n   *\r\n   * Both organization and event must be specified in the query parameters\r\n   * for this page.\r\n   */\r\n  function renderEvent() {\r\n    // do not re-render if data already rendered\r\n    if (eventData != null || error != null)\r\n      return;\r\n\r\n    setEventData(false);\r\n    setTaskData(false);\r\n    setLoaded(true);\r\n\r\n    // need to add function that checks \r\n    // if the org page is it's own home page\r\n    // or another org\r\n    setCreateTask(true)\r\n\r\n    const queryParams = getQueryParams();\r\n\r\n    if (queryParams['org'] == null || queryParams['event'] == null) {\r\n      // Both org and event needed to find resource\r\n      // setLoaded(true);\r\n      setError(<NotFound />);\r\n      return;\r\n    }\r\n\r\n  //   fetchEventData(queryParams).then(eventData => {\r\n  //     setLoaded(true);\r\n  //     if (eventData == null) {\r\n  //       // Something went wrong.\r\n  //       return;\r\n\r\n    util.requestGET(\r\n      '/causes_api/get_event', queryParams, 'application/json'\r\n    ).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(body => {\r\n          // const orgData = body['org'];\r\n          const orgEvent = body['event_info'];\r\n          const user = body['user'];\r\n\r\n          setEventData(orgEvent);\r\n          setTaskData(orgEvent);\r\n\r\n          if (queryParams['org'] == null) {\r\n            // We are displaying logged-in organization\r\n            // setCreateTask(true);\r\n          } else if ('volunteer' in user) {\r\n            setSignUpTask(!user.volunteer.orgs.includes(queryParams['org']));\r\n            setSignUpEvent(!user.volunteer.orgs.includes(queryParams['org']));\r\n          }\r\n        });\r\n      } else if (res.status === 401) {\r\n        navigate('/');\r\n      } else {\r\n        setError(404);\r\n      }\r\n       \r\n  //     setEventData(eventData);\r\n    });\r\n  }\r\n\r\n   /* function goingEvent\r\n   *\r\n   * Makes request to backend to sign logged-in volunteer user up\r\n   * for this event.\r\n   */\r\n   function goingEvent() {\r\n    const queryParams = getQueryParams();\r\n    const body = JSON.stringify({'event' : queryParams['event']});\r\n\r\n    util.requestPOST('/causes_api/vol_event_link', body).then(res => {\r\n      if (res.status === 200) {\r\n        setSignUpEvent(false);\r\n      } else {\r\n        // TODO: change this\r\n        alert(\"Something went wrong.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function notGoingEvent() {\r\n    const queryParams = getQueryParams();\r\n    const body = JSON.stringify({'event' : queryParams['event']});\r\n\r\n    util.requestPOST('/causes_api/vol_event_unlink', body).then(res => {\r\n      if (res.status === 200) {\r\n        setSignUpEvent(true);\r\n      } else {\r\n        // TODO: change this\r\n        alert(\"Something went wrong.\");\r\n      }\r\n    });\r\n  }\r\n\r\n     /* function doTask\r\n   *\r\n   * Makes request to backend to sign logged-in volunteer user up\r\n   * for this event.\r\n   */\r\n     function doingTask() {\r\n      const queryParams = getQueryParams();\r\n      const body = JSON.stringify({'event' : queryParams['event']});\r\n  \r\n      util.requestPOST('/causes_api/vol_task_link', body).then(res => {\r\n        if (res.status === 200) {\r\n          setSignUpTask(false);\r\n        } else {\r\n          // TODO: change this\r\n          alert(\"Something went wrong.\");\r\n        }\r\n      });\r\n    }\r\n  \r\n    function notDoingTask() {\r\n      const queryParams = getQueryParams();\r\n      const body = JSON.stringify({'event' : queryParams['event']});\r\n  \r\n      util.requestPOST('/causes_api/vol_task_unlink', body).then(res => {\r\n        if (res.status === 200) {\r\n          setSignUpTask(true);\r\n        } else {\r\n          // TODO: change this\r\n          alert(\"Something went wrong.\");\r\n        }\r\n      });\r\n    }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {eventData &&\r\n        <div className=\"eventinfo\">\r\n          <h1>{ eventData.eventName }</h1>\r\n          <h4>Organized by { eventData.orgName }</h4>\r\n          <h3>{ eventData.date }</h3>\r\n          <Row>\r\n            <Col style={{textAlign: 'left' }}>\r\n            <h5>{ eventData.category }</h5>\r\n            </Col>\r\n            <Col style={{textAlign: 'right' }}>\r\n              {signUpEvent &&\r\n                <Button variant=\"outline-secondary\" style={{marginTop: 15 }} onClick={goingEvent}>\r\n                  Going\r\n                </Button>\r\n              }\r\n              {signUpEvent === false &&\r\n                <Button variant=\"outline-secondary\" style={{marginTop: 15 }} onClick={notGoingEvent}>\r\n                Not Going\r\n              </Button>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          \r\n          <p style={{textAlign: 'left' }}>{ eventData.bio }</p>\r\n          <Row className =\"my-5\">\r\n            <Col style={{textAlign: 'left' }}>\r\n            <h3>Tasks</h3>\r\n            </Col>\r\n            <Col style={{textAlign: 'right' }}>\r\n            {createTask && (<Link to=\"/createtask\">\r\n            <Button variant=\"outline-secondary\" type=\"submit\" style={{marginTop: 15 }}>\r\n                + Add Task\r\n            </Button>\r\n            </Link>)}\r\n            </Col>\r\n          </Row>\r\n            \r\n            \r\n            <Card>\r\n            <Card.Body>\r\n              <Card.Title>\r\n              <Row className =\"my-1\">\r\n              <Col style={{textAlign: 'left' }}>Task Name</Col>\r\n              <Col style={{textAlign: 'center' }}>Task Deadline</Col>\r\n              <Col style={{textAlign: 'right' }}>\r\n              {signUpTask &&\r\n                <Button variant=\"outline-secondary\" style={{marginTop: 15 }} onClick={doingTask}>\r\n                  Add\r\n                </Button>\r\n              }\r\n              {signUpTask === false &&\r\n                <Button variant=\"outline-secondary\" style={{marginTop: 15 }} onClick={notDoingTask}>\r\n                Remove\r\n              </Button>\r\n              }\r\n              </Col>\r\n              </Row>\r\n              </Card.Title>\r\n              <Card.Text>\r\n                Task Description\r\n              </Card.Text>\r\n            </Card.Body>\r\n            </Card>\r\n\r\n          {/* {taskData &&\r\n            taskData.map(task => {\r\n              return (\r\n                <Card key={'org:' + eventData.orgName + '&event:' + taskData.event_id}>\r\n                  <Card.Body>\r\n                    <Card.Title>{task.name}</Card.Title>\r\n                    </Link>\r\n                    <Card.Text>\r\n                      {task.description}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              );\r\n            })\r\n          } */}\r\n        </div>\r\n      }\r\n      {!loaded &&\r\n        <div className=\"my-3\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </div>\r\n      }\r\n      {error}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}